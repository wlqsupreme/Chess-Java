这是一个编程问题的中文翻译：

### 棋类游戏问题

#### 先决条件
* Java 14
* Gradle 6.3+

#### 摘要
你获得了一个第三方库 `ChessLib`，该库用于计算一个骑士（Knight）在 8x8 棋盘上给定位置的合法移动。该库已被用于创建一个程序：给定一个初始位置和总移动步数，让一个骑士在棋盘上随机移动。

#### 问题描述
扩展此程序，设置一个 8x8 的方形游戏棋盘，棋盘上在预定义位置放置了几个不同的棋子。
对于游戏中的每一步，程序将**随机选择一个棋子**，并将其移动到**随机选择的一个有效位置**。

你**不能**更改任何 `ChessLib` 的代码。
请按要求扩展程序。请适当使用**面向对象设计和建模（Object Oriented Design and Modeling）**以实现可扩展性。

#### 游戏规则
1.  在任何给定时间，棋盘上的任何位置只能被一个棋子占据。
2.  所有棋子都可以“跳过”任何已被占据的位置。

**注意**：尽管此游戏与国际象棋（Chess）惊人地相似，但这**纯属巧合**。不要假设其他国际象棋规则适用。

#### 需要支持的棋子
* **骑士 (Knight)** - 按照 `ChessLib` 中实现的方式移动。
* **主教 (Bishop)** - 沿对角线移动，可在棋盘边界内的任意距离。
* **皇后 (Queen)** – 沿对角线、水平或垂直方向移动，可在棋盘边界内的任意距离。

---

#### 你需要做什么？
1.  在 `src/main/java/chessGame/ComplexGame.java` 文件中实现你的业务逻辑。
2.  如果你想添加一些辅助类，请将它们插入到 `chessGame` 包中。
3.  在 `src/test/java/chessGame` 文件夹中编写你的单元测试。
4.  如果你想测试你的应用程序，可以修改 `src/main/java/chessGame/App.java` 来打印输出。

---

#### 关于 Gradle
Gradle 是一种用于编译和测试应用程序的构建工具。以下功能可能对你有帮助。

* `gradle check`：运行所有单元测试。
* `gradle run`：运行主应用程序。
* `gradle tasks`：打印所有支持的任务。




📋 项目完成总结
✅ 创建的文件：
ChessPiece.java - 定义棋子接口
BoardUtils.java - 棋盘边界检查工具
Knight.java - 骑士类（L型移动）
Bishop.java - 主教类（对角线移动）
Queen.java - 皇后类（对角线+直线移动）
✅ 修改的文件：
ComplexGame.java - 实现完整游戏逻辑
App.java - 更新为运行 ComplexGame
🎮 游戏流程：
1. setup() → 在棋盘上放置 6 个棋子
2. play(10) → 执行 10 次移动
   每次移动：
   - 随机选择一个棋子
   - 计算有效移动（排除已占据位置）
   - 随机选择一个有效位置
   - 移动棋子并打印日志


   

#### 1\. (可选) 查看所有可用的 Gradle 版本

```bash
sdk list gradle
```

#### 2\. 安装一个符合项目要求的版本

你的项目要求 Gradle 6.3+。我们就安装一个兼容的、比较稳定的版本，比如 `6.9.4` (这也是我之前提过的)：

```bash
sdk install gradle 6.9.4
```

`SDKMAN!` 会自动下载、解压并配置好 Gradle。

#### 3\. 验证安装

安装完成后，运行以下命令来验证 Gradle 是否安装成功：

```bash
gradle -v
```

如果你看到了 `Gradle 6.9.4` 的相关信息，那就说明你已经成功安装了！

-----

### 运行项目的完整流程 (复习)

现在你万事俱备了。每次你想运行这个项目时，流程如下：

1.  打开 **Git Bash**。
2.  `cd` 进入你的项目文件夹（包含 `build.gradle` 的那个）。
3.  **设置 Java 14 (手动)**：
    ```bash
    export JAVA_HOME="/d/software/Java-version/jdk-14.0.2"
    export PATH="$JAVA_HOME/bin:$PATH"
    ```
4.  **设置 Gradle (使用 SDKMAN\!)**：
    ```bash
    sdk use gradle 6.9.4
    ```
5.  **运行项目**：
    ```bash
    gradle check   # 运行单元测试
    gradle run     # 运行主程序
    ```